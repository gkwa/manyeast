set shell := ["bash", "-uec"]

default:
    @just --list

setup:
    #!/usr/bin/env bash
    packer init .

    if ! incus image info {{ .OutputImage1 }} &>/dev/null; then
        echo "Building base image {{ .OutputImage1 }}..."
        packer build -on-error=abort {{ .Script1 }}
    fi

    if ! incus image info {{ .OutputImage2 }} &>/dev/null; then
        echo "Building configured image {{ .OutputImage2 }}..."
        packer build -on-error=abort {{ .Script2 }}
    fi

    # Clean up existing containers
    incus info {{ .Container1Name }} &>/dev/null && incus rm --force {{ .Container1Name }}
    incus info {{ .Container2Name }} &>/dev/null && incus rm --force {{ .Container2Name }}

    terraform init
    terraform plan -out=tfplan
    terraform apply tfplan

    # Test that brew command runs as expected with example app chamber
    incus exec {{ .Container2Name }} -- bash -l -c 'brew install chamber'
    incus exec {{ .Container2Name }} -- bash -l -c 'chamber version'

veryclean: teardown
    #!/usr/bin/env bash

    # Clean up existing images
    incus image info {{ .OutputImage1 }} &>/dev/null && incus image rm {{ .OutputImage1 }}
    incus image info {{ .OutputImage2 }} &>/dev/null && incus image rm {{ .OutputImage2 }}

teardown:
    #!/usr/bin/env bash

    # Clean up existing containers
    incus info {{ .Container2Name }} &>/dev/null && incus rm --force {{ .Container2Name }}
    incus info {{ .Container1Name }} &>/dev/null && incus rm --force {{ .Container1Name }}

fmt:
    shfmt -w -s -i 4 *.sh
    packer fmt -recursive .
    terraform fmt .
    prettier --ignore-path=.prettierignore --config=.prettierrc.json --write .
    just --unstable --fmt
